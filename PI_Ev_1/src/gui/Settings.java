package gui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.net.URL;
import javax.help.HelpBroker;
import javax.help.HelpSet;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JSlider;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.UIManager.LookAndFeelInfo;
import static javax.swing.UIManager.getInstalledLookAndFeels;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import logic.persistance.RepositoryImp;

public class Settings extends javax.swing.JFrame {
    private static Settings instance = null;
    private final Configuration config;

    /**
     * Creates new form Settings
     */
    private Settings() {
        initComponents();
        this.config = RepositoryImp.getInstance().getConfiguration();
        myInitComponents();
    }
    
    public static Settings getInstance(){
        if(instance == null)
            instance = new Settings();
        return instance;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pn_main = new javax.swing.JPanel();
        pn_buttons = new javax.swing.JPanel();
        btn_update = new javax.swing.JButton();
        btn_cancel = new javax.swing.JButton();
        pn_settings = new javax.swing.JPanel();
        lbl_theme = new javax.swing.JLabel();
        cmb_theme = new javax.swing.JComboBox<>();
        lbl_mins = new javax.swing.JLabel();
        sld_mins = new javax.swing.JSlider();
        mn_bar = new javax.swing.JMenuBar();
        mn_program = new javax.swing.JMenu();
        mntm_exit = new javax.swing.JMenuItem();
        mn_help = new javax.swing.JMenu();
        mntm_help = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        mntm_about = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(org.openide.util.NbBundle.getMessage(Settings.class, "Settings.title")); // NOI18N
        setIconImage(new javax.swing.ImageIcon(getClass().getResource("/gui/img/settings_x64.png")).getImage());
        setMinimumSize(new java.awt.Dimension(320, 230));
        setResizable(false);

        pn_buttons.setMinimumSize(new java.awt.Dimension(206, 25));
        pn_buttons.setLayout(new java.awt.GridLayout(1, 0, 8, 0));

        btn_update.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/img/update_x12.png"))); // NOI18N
        btn_update.setMnemonic('a');
        btn_update.setText(org.openide.util.NbBundle.getMessage(Settings.class, "Settings.btn_update.text")); // NOI18N
        btn_update.setToolTipText(org.openide.util.NbBundle.getMessage(Settings.class, "Settings.btn_update.toolTipText")); // NOI18N
        btn_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_updateActionPerformed(evt);
            }
        });
        pn_buttons.add(btn_update);

        btn_cancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/img/remove_x12.png"))); // NOI18N
        btn_cancel.setMnemonic('c');
        btn_cancel.setText(org.openide.util.NbBundle.getMessage(Settings.class, "Settings.btn_cancel.text")); // NOI18N
        btn_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelActionPerformed(evt);
            }
        });
        pn_buttons.add(btn_cancel);

        pn_settings.setLayout(new java.awt.GridLayout(2, 2, 8, 10));

        lbl_theme.setDisplayedMnemonic('e');
        lbl_theme.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lbl_theme.setText(org.openide.util.NbBundle.getMessage(Settings.class, "Settings.lbl_theme.text")); // NOI18N
        pn_settings.add(lbl_theme);

        cmb_theme.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        pn_settings.add(cmb_theme);

        lbl_mins.setDisplayedMnemonic('m');
        lbl_mins.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lbl_mins.setText(org.openide.util.NbBundle.getMessage(Settings.class, "Settings.lbl_mins.text")); // NOI18N
        pn_settings.add(lbl_mins);
        pn_settings.add(sld_mins);

        javax.swing.GroupLayout pn_mainLayout = new javax.swing.GroupLayout(pn_main);
        pn_main.setLayout(pn_mainLayout);
        pn_mainLayout.setHorizontalGroup(
            pn_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_mainLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(pn_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pn_mainLayout.createSequentialGroup()
                        .addGap(0, 24, Short.MAX_VALUE)
                        .addComponent(pn_buttons, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(pn_settings, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(15, 15, 15))
        );
        pn_mainLayout.setVerticalGroup(
            pn_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pn_mainLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pn_settings, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(pn_buttons, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        mn_program.setMnemonic('t');
        mn_program.setText(org.openide.util.NbBundle.getMessage(Settings.class, "Settings.mn_program.text")); // NOI18N
        mn_program.setToolTipText(org.openide.util.NbBundle.getMessage(Settings.class, "Settings.mn_program.toolTipText")); // NOI18N

        mntm_exit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        mntm_exit.setMnemonic('c');
        mntm_exit.setText(org.openide.util.NbBundle.getMessage(Settings.class, "Settings.mntm_exit.text")); // NOI18N
        mntm_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mntm_exitActionPerformed(evt);
            }
        });
        mn_program.add(mntm_exit);

        mn_bar.add(mn_program);

        mn_help.setMnemonic('y');
        mn_help.setText(org.openide.util.NbBundle.getMessage(Settings.class, "Settings.mn_help.text")); // NOI18N

        mntm_help.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        mntm_help.setMnemonic('m');
        mntm_help.setText(org.openide.util.NbBundle.getMessage(Settings.class, "Settings.mntm_help.text")); // NOI18N
        mn_help.add(mntm_help);
        mn_help.add(jSeparator2);

        mntm_about.setMnemonic('a');
        mntm_about.setText(org.openide.util.NbBundle.getMessage(Settings.class, "Settings.mntm_about.text")); // NOI18N
        mntm_about.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mntm_aboutActionPerformed(evt);
            }
        });
        mn_help.add(mntm_about);

        mn_bar.add(mn_help);

        setJMenuBar(mn_bar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pn_main, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pn_main, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mntm_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mntm_exitActionPerformed
        exit();
    }//GEN-LAST:event_mntm_exitActionPerformed

    private void mntm_aboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mntm_aboutActionPerformed
        Utils.messageAbout(this);
    }//GEN-LAST:event_mntm_aboutActionPerformed

    private void btn_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelActionPerformed
        exit();
    }//GEN-LAST:event_btn_cancelActionPerformed

    private void btn_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_updateActionPerformed
        Configuration config = new Configuration((String) cmb_theme.getSelectedItem(), sld_mins.getValue());
        RepositoryImp.getInstance().setConfiguration(config);
        Utils.messageInformationReset(this);
        this.dispose();
        resetLookAndFeel();
    }//GEN-LAST:event_btn_updateActionPerformed

    private void myInitComponents(){
        lbl_theme.setLabelFor(cmb_theme);
        lbl_mins.setLabelFor(sld_mins);
        
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        for(LookAndFeelInfo lfi : getInstalledLookAndFeels())
            model.addElement(lfi.getName());
        cmb_theme.setModel(model);
        cmb_theme.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                try{
                    LookAndFeelInfo lfi = getInstalledLookAndFeels()[cmb_theme.getSelectedIndex()];
                    UIManager.setLookAndFeel(lfi.getClassName());
                    SwingUtilities.updateComponentTreeUI(cmb_theme.getRootPane());
                }catch(ClassNotFoundException | IllegalAccessException | InstantiationException | UnsupportedLookAndFeelException ex){
                    ex.printStackTrace();
                }
            }
        });
        
        sld_mins.setMinimum(0);
        sld_mins.setMaximum(60);
        sld_mins.setMajorTickSpacing(10);
        sld_mins.setMinorTickSpacing(5);
        sld_mins.setPaintTicks(true);
        sld_mins.setPaintLabels(true);
        sld_mins.addChangeListener(new ChangeListener() {
            @Override
            public void stateChanged(ChangeEvent e) {
                JSlider slider = (JSlider)e.getSource();
                if(slider.getValue() == 0)
                    Utils.messageInformationDisableAutomaticPersistance(sld_mins.getRootPane());               
            }
        });
        
        if(this.config != null){
            cmb_theme.setSelectedItem(this.config.getLookAndFeel());
            sld_mins.setValue(this.config.getMinutesAutoPersist());
        }
        
        loadHelpDocs();
    }
    
//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(Settings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(Settings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(Settings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Settings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Settings().setVisible(true);
//            }
//        });
//    }

    
    private void resetLookAndFeel(){
        if(config == null) return;
        
        cmb_theme.setSelectedItem(config.getLookAndFeel());
        sld_mins.setValue(config.getMinutesAutoPersist());
        try{
            LookAndFeelInfo currentLFI;
            for(LookAndFeelInfo lfi : getInstalledLookAndFeels())
                if(lfi.getName().equals(config.getLookAndFeel())){
                    UIManager.setLookAndFeel(lfi.getClassName());
                    SwingUtilities.updateComponentTreeUI(cmb_theme.getRootPane());
                    break;
                }
        }catch(Throwable e){
            e.printStackTrace();
        }
    }
    
    private void exit(){
        resetLookAndFeel();
        this.dispose();
    }
    
    private void loadHelpDocs(){
        try{
            File file = new File("help" +File.separator +"help_set.hs");
            URL url = file.toURI().toURL();

            HelpSet hs = new HelpSet(getClass().getClassLoader(), url);
            HelpBroker hb = hs.createHelpBroker();
            
            hb.enableHelpKey(getRootPane(), "settings", hs);
            hb.enableHelpOnButton(mntm_help, "settings", hs);
        }catch(Exception e){
            e.printStackTrace();
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_cancel;
    private javax.swing.JButton btn_update;
    private javax.swing.JComboBox<String> cmb_theme;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JLabel lbl_mins;
    private javax.swing.JLabel lbl_theme;
    private javax.swing.JMenuBar mn_bar;
    private javax.swing.JMenu mn_help;
    private javax.swing.JMenu mn_program;
    private javax.swing.JMenuItem mntm_about;
    private javax.swing.JMenuItem mntm_exit;
    private javax.swing.JMenuItem mntm_help;
    private javax.swing.JPanel pn_buttons;
    private javax.swing.JPanel pn_main;
    private javax.swing.JPanel pn_settings;
    private javax.swing.JSlider sld_mins;
    // End of variables declaration//GEN-END:variables
}
