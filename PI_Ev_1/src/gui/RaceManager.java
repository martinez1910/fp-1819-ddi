package gui;

import gui.tablemodel.RaceTableModel;
import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.List;
import javax.help.HelpBroker;
import javax.help.HelpSet;
import javax.help.HelpSetException;
import javax.swing.JOptionPane;
import javax.swing.table.TableRowSorter;
import logic.obj.Race;
import logic.obj.RunnerInRace;
import logic.persistance.RepositoryImp;

/**
 * Window that shows the unfinished races and allows the user to add, modify,
 * eliminate or initialize them.
 * @author Alejandro Mart√≠nez Remis
 */
public class RaceManager extends javax.swing.JFrame {
    private static RaceManager instance = null;

    private RaceManager() {
        initComponents();
        myInitComponents();
    }
    
    public static RaceManager getInstance(){
        if(instance == null)
            instance = new RaceManager();
        return instance;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrpn_table = new javax.swing.JScrollPane();
        tb_races = new javax.swing.JTable();
        pn_buttons = new javax.swing.JPanel();
        btn_add = new javax.swing.JButton();
        btn_edit = new javax.swing.JButton();
        btn_remove = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        btn_back = new javax.swing.JButton();
        pn_start_button = new javax.swing.JPanel();
        btn_start = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        mn_bar = new javax.swing.JMenuBar();
        mn_program = new javax.swing.JMenu();
        mntm_exit = new javax.swing.JMenuItem();
        mn_help = new javax.swing.JMenu();
        mntm_help = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        mntm_about = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(org.openide.util.NbBundle.getMessage(RaceManager.class, "RaceManager.title")); // NOI18N
        setIconImage(new javax.swing.ImageIcon(getClass().getResource("/gui/img/runner_group_x64.png")).getImage());
        setMinimumSize(new java.awt.Dimension(930, 330));

        scrpn_table.setPreferredSize(new java.awt.Dimension(350, 175));

        tb_races.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tb_races.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        scrpn_table.setViewportView(tb_races);

        pn_buttons.setLayout(new java.awt.GridLayout(1, 4, 18, 0));

        btn_add.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/img/add_x12.png"))); // NOI18N
        btn_add.setMnemonic('a');
        btn_add.setText(org.openide.util.NbBundle.getMessage(RaceManager.class, "RaceManager.btn_add.text")); // NOI18N
        btn_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addActionPerformed(evt);
            }
        });
        pn_buttons.add(btn_add);

        btn_edit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/img/edit_x12.png"))); // NOI18N
        btn_edit.setMnemonic('d');
        btn_edit.setText(org.openide.util.NbBundle.getMessage(RaceManager.class, "RaceManager.btn_edit.text")); // NOI18N
        btn_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editActionPerformed(evt);
            }
        });
        pn_buttons.add(btn_edit);

        btn_remove.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/img/remove_x12.png"))); // NOI18N
        btn_remove.setMnemonic('e');
        btn_remove.setText(org.openide.util.NbBundle.getMessage(RaceManager.class, "RaceManager.btn_remove.text")); // NOI18N
        btn_remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_removeActionPerformed(evt);
            }
        });
        pn_buttons.add(btn_remove);

        jButton4.setText(org.openide.util.NbBundle.getMessage(RaceManager.class, "RaceManager.jButton4.text")); // NOI18N
        pn_buttons.add(jButton4);

        btn_back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/img/back_x12.png"))); // NOI18N
        btn_back.setMnemonic('v');
        btn_back.setText(org.openide.util.NbBundle.getMessage(RaceManager.class, "RaceManager.btn_back.text")); // NOI18N
        btn_back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_backActionPerformed(evt);
            }
        });
        pn_buttons.add(btn_back);

        pn_start_button.setLayout(new java.awt.GridLayout(2, 1));

        btn_start.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/img/flag_start_x64.png"))); // NOI18N
        btn_start.setMnemonic('i');
        btn_start.setText(org.openide.util.NbBundle.getMessage(RaceManager.class, "RaceManager.btn_start.text")); // NOI18N
        btn_start.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_start.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_startActionPerformed(evt);
            }
        });
        pn_start_button.add(btn_start);

        jButton2.setText(org.openide.util.NbBundle.getMessage(RaceManager.class, "RaceManager.jButton2.text")); // NOI18N
        pn_start_button.add(jButton2);

        mn_program.setMnemonic('t');
        mn_program.setText(org.openide.util.NbBundle.getMessage(RaceManager.class, "RaceManager.mn_program.text")); // NOI18N
        mn_program.setToolTipText(org.openide.util.NbBundle.getMessage(RaceManager.class, "RaceManager.mn_program.toolTipText")); // NOI18N

        mntm_exit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        mntm_exit.setMnemonic('c');
        mntm_exit.setText(org.openide.util.NbBundle.getMessage(RaceManager.class, "RaceManager.mntm_exit.text")); // NOI18N
        mntm_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mntm_exitActionPerformed(evt);
            }
        });
        mn_program.add(mntm_exit);

        mn_bar.add(mn_program);

        mn_help.setMnemonic('y');
        mn_help.setText(org.openide.util.NbBundle.getMessage(RaceManager.class, "RaceManager.mn_help.text")); // NOI18N

        mntm_help.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        mntm_help.setMnemonic('m');
        mntm_help.setText(org.openide.util.NbBundle.getMessage(RaceManager.class, "RaceManager.mntm_help.text")); // NOI18N
        mn_help.add(mntm_help);
        mn_help.add(jSeparator2);

        mntm_about.setMnemonic('a');
        mntm_about.setText(org.openide.util.NbBundle.getMessage(RaceManager.class, "RaceManager.mntm_about.text")); // NOI18N
        mntm_about.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mntm_aboutActionPerformed(evt);
            }
        });
        mn_help.add(mntm_about);

        mn_bar.add(mn_help);

        setJMenuBar(mn_bar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pn_buttons, javax.swing.GroupLayout.DEFAULT_SIZE, 887, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(scrpn_table, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pn_start_button, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrpn_table, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pn_start_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(pn_buttons, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addActionPerformed
        Utils.allignAndShowWindow(new RaceForm(this, null), this);
    }//GEN-LAST:event_btn_addActionPerformed

    private void btn_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editActionPerformed
        int selectedRow = tb_races.getSelectedRow();
        if(selectedRow == -1){
            Utils.messageInformationSelectRace(this);
            return;
        }
        Race race = RepositoryImp.getInstance().getUnfinishedRace(tb_races.convertRowIndexToModel(selectedRow));
        Utils.allignAndShowWindow(new RaceForm(this, race), this);
    }//GEN-LAST:event_btn_editActionPerformed

    private void btn_removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_removeActionPerformed
        int selectedRow = tb_races.getSelectedRow();
        if(selectedRow == -1){
            Utils.messageInformationSelectRace(this);
            return;
        }
        if(Utils.messageConfirmationRemoveRace(this) == JOptionPane.YES_OPTION){
            Race race = RepositoryImp.getInstance().getUnfinishedRaces().get(tb_races.convertRowIndexToModel(selectedRow));
            RepositoryImp.getInstance().removeRace(race);
            updateTable();
        }
    }//GEN-LAST:event_btn_removeActionPerformed

    private void btn_backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_backActionPerformed
        this.dispose();
    }//GEN-LAST:event_btn_backActionPerformed

    private void btn_startActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_startActionPerformed
        int selectedRow = tb_races.getSelectedRow();
        if(selectedRow == -1){
            Utils.messageInformationSelectRace(this);
            return;
        }
        
        Race race = RepositoryImp.getInstance().getUnfinishedRaces().get(tb_races.convertRowIndexToModel(selectedRow));
        List<RunnerInRace> runnersInRace = RepositoryImp.getInstance().getRunnersInRace(race);
        
        if(runnersInRace.size() < 2){
            Utils.messageErrorStartRace(this);
            return;
        }
        
        if(Utils.messageConfirmationStartRace(this) == JOptionPane.YES_OPTION)
            Utils.allignAndShowWindow(new RaceStart(this, race, runnersInRace), this);
    }//GEN-LAST:event_btn_startActionPerformed

    private void mntm_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mntm_exitActionPerformed
        this.dispose();
    }//GEN-LAST:event_mntm_exitActionPerformed

    private void mntm_aboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mntm_aboutActionPerformed
        Utils.messageAbout(this);
    }//GEN-LAST:event_mntm_aboutActionPerformed

    private void myInitComponents(){
        jButton2.setVisible(false);
        jButton4.setVisible(false);
        updateTable();
        loadHelpDocs();
    }
    
    /**
     * Loads data into the JTable
     */
    protected void updateTable(){
        Utils.lockCursor(this);
        RaceTableModel raceTableModel = new RaceTableModel(RepositoryImp.getInstance().getUnfinishedRaces());
        tb_races.setModel(raceTableModel);
        TableRowSorter<RaceTableModel> sorter = new TableRowSorter<>(raceTableModel);
        tb_races.setRowSorter(sorter);
        /*
        ArrayList<RowSorter.SortKey> sortKeys = new ArrayList<>();
        sortKeys.add(new RowSorter.SortKey(0, SortOrder.ASCENDING));
        sorter.setSortKeys(sortKeys);
        */
        Utils.unlockCursor(this);
    }
    
    /**
     * Loads JavaHelp documentation and associates components.
     */
    private void loadHelpDocs(){
        try{
            File file = new File("help" +File.separator +"help_set.hs");
            URL url = file.toURI().toURL();

            HelpSet hs = new HelpSet(getClass().getClassLoader(), url);
            HelpBroker hb = hs.createHelpBroker();
            
            hb.enableHelpKey(getRootPane(), "race_manager", hs);
            hb.enableHelpOnButton(mntm_help, "race_manager", hs);
        }catch(IllegalArgumentException | MalformedURLException | HelpSetException e){
            e.printStackTrace();
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_add;
    private javax.swing.JButton btn_back;
    private javax.swing.JButton btn_edit;
    private javax.swing.JButton btn_remove;
    private javax.swing.JButton btn_start;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JMenuBar mn_bar;
    private javax.swing.JMenu mn_help;
    private javax.swing.JMenu mn_program;
    private javax.swing.JMenuItem mntm_about;
    private javax.swing.JMenuItem mntm_exit;
    private javax.swing.JMenuItem mntm_help;
    private javax.swing.JPanel pn_buttons;
    private javax.swing.JPanel pn_start_button;
    private javax.swing.JScrollPane scrpn_table;
    private javax.swing.JTable tb_races;
    // End of variables declaration//GEN-END:variables
}
